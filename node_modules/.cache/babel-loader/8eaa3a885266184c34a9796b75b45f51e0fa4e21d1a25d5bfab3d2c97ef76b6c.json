{"ast":null,"code":"var _jsxFileName = \"/Users/bsingh/jarvis/src/tenantdata.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Tenantdata() {\n  _s();\n  const [tenants, setTenants] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // useEffect(() => {\n  //   setLoading(true)\n  //   fetch(\"http://localhost:8000/tenantdata\")\n  //     .then(response => response.json())\n  //     .then(json => setTenants(json))\n  //     .finally(() => {\n  //       setLoading(false)\n  //     })\n  // }, [])\n  useEffect(() => {\n    setLoading(true);\n    axios.get(\"http://localhost:8000/tenantdata\").then(response => {\n      setTenants(response.data);\n      console.log(\"response----\", response);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tenants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tenant ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tenant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"User Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), tenants.map(tenant => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: tenant.tenant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tenant.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tenant.userid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, tenant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 2\n  }, this);\n}\n_s(Tenantdata, \"NalsEgbpliJeOSbD+PDsTiPkJHY=\");\n_c = Tenantdata;\nvar _c;\n$RefreshReg$(_c, \"Tenantdata\");","map":{"version":3,"names":["React","useEffect","useState","Table","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Tenantdata","_s","tenants","setTenants","loading","setLoading","get","then","response","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","border","map","tenant","type","userid","id","_c","$RefreshReg$"],"sources":["/Users/bsingh/jarvis/src/tenantdata.js"],"sourcesContent":["import React, { useEffect ,useState} from 'react';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\n\nexport default function Tenantdata() {\n    const [tenants, setTenants] = useState([])\n    const [loading, setLoading] = useState(false)\n    // useEffect(() => {\n    //   setLoading(true)\n    //   fetch(\"http://localhost:8000/tenantdata\")\n    //     .then(response => response.json())\n    //     .then(json => setTenants(json))\n    //     .finally(() => {\n    //       setLoading(false)\n    //     })\n    // }, [])\n    useEffect(() => {\n        setLoading(true)\n        axios.get(\"http://localhost:8000/tenantdata\")\n        .then(response =>{\n            setTenants(response.data)\n            console.log(\"response----\",response);\n            setLoading(false)\n        } )\n    },[])\n\n  return (\n <div className=\"App\">\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          <h1>Tenants</h1>\n          <table border={1}>\n            <tr>\n              <th>Tenant ID</th>\n              <th>Tenant</th>\n              <th>Type</th>\n              <th>User Id</th>\n            </tr>\n            {tenants.map(tenant => (\n              <tr key={tenant.id}>\n                <td>{tenant.tenant}</td>\n                <td>{tenant.type}</td>\n                <td>{tenant.userid}</td>\n              </tr>\n            ))}\n          </table>\n        </>\n      )}\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}