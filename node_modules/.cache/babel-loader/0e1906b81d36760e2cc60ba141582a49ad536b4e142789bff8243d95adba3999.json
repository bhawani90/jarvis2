{"ast":null,"code":"var _jsxFileName = \"/Users/bsingh/jarvis/src/Tenanttable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tenanttable(_ref) {\n  _s();\n  let {\n    columns,\n    data\n  } = _ref;\n  // Use the state and functions returned from useTable to build your UI\n  const [filterInput, setFilterInput] = useState(\"\");\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter\n  } = useTable({\n    columns,\n    data\n  }, useFilters);\n\n  // Render the UI for your table\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_s(Tenanttable, \"Xftx1hFVkkzfUcQ3G9WCNhrsLes=\", false, function () {\n  return [useTable];\n});\n_c = Tenanttable;\nvar _c;\n$RefreshReg$(_c, \"Tenanttable\");","map":{"version":3,"names":["React","useState","useTable","jsxDEV","_jsxDEV","Tenanttable","_ref","_s","columns","data","filterInput","setFilterInput","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","useFilters","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","i","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/bsingh/jarvis/src/Tenanttable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTable} from \"react-table\";\n\nexport default function Tenanttable({ columns, data }) {\n\n  // Use the state and functions returned from useTable to build your UI\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter \n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters\n    );\n\n  // Render the UI for your table\n  return (\n      <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAAH,IAAA;EAEnD;EACA,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM;IACJW,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,UAAU;IACVC;EACF,CAAC,GAAGf,QAAQ,CACV;IACEM,OAAO;IACPC;EACF,CAAC,EACDS,UACA,CAAC;;EAEH;EACA,oBACId,OAAA;IAAA,GAAWQ,aAAa,CAAC,CAAC;IAAAO,QAAA,gBAC1Bf,OAAA;MAAAe,QAAA,EACGL,YAAY,CAACM,GAAG,CAACC,WAAW,iBAC3BjB,OAAA;QAAA,GAAQiB,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC7BpB,OAAA;UAAA,GAAQoB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR1B,OAAA;MAAA,GAAWS,iBAAiB,CAAC,CAAC;MAAAM,QAAA,EAC3BJ,IAAI,CAACK,GAAG,CAAC,CAACW,GAAG,EAAEC,CAAC,KAAK;QACpBhB,UAAU,CAACe,GAAG,CAAC;QACf,oBACE3B,OAAA;UAAA,GAAQ2B,GAAG,CAACE,WAAW,CAAC,CAAC;UAAAd,QAAA,EACtBY,GAAG,CAACG,KAAK,CAACd,GAAG,CAACe,IAAI,IAAI;YACrB,oBAAO/B,OAAA;cAAA,GAAQ+B,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAjB,QAAA,EAAGgB,IAAI,CAACT,MAAM,CAAC,MAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAChE,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;AAACvB,EAAA,CA9CuBF,WAAW;EAAA,QAY7BH,QAAQ;AAAA;AAAAmC,EAAA,GAZUhC,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}